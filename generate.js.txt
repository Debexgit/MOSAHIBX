// This is a Vercel Serverless Function
// It runs on the backend and keeps your API key safe.

export default async function handler(request, response) {
    if (request.method !== 'POST') {
        return response.status(405).json({ error: 'Method Not Allowed' });
    }

    const { prompt } = request.body;

    if (!prompt) {
        return response.status(400).json({ error: 'Prompt is required' });
    }

    const apiKey = process.env.GEMINI_API_KEY;
    if (!apiKey) {
        return response.status(500).json({ error: 'API key is not configured' });
    }

    const API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${apiKey}`;

    try {
        const apiResponse = await fetch(API_URL, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                contents: [{ parts: [{ text: prompt }] }],
            }),
        });

        if (!apiResponse.ok) {
            const errorData = await apiResponse.json();
            console.error('Google API Error:', errorData);
            throw new Error(errorData.error?.message || 'Failed to get response from Google API');
        }

        const data = await apiResponse.json();
        const generatedText = data.candidates[0].content.parts[0].text;

        return response.status(200).json({ text: generatedText });

    } catch (error) {
        console.error('Server-side Error:', error);
        return response.status(500).json({ error: error.message });
    }
}
